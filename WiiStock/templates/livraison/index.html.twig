{% extends 'layout.html.twig' %}

{% block title %}Livraison index{% endblock %}

{% block page_content %}
    <h1>Livraison index</h1>

    
    {% if history is defined %}
        <div class="row btn pull-left">
            <a href={{path('livraison_index', {'history':'false'})}} class="button btn-left"><span class="fas fa-history"></span> Livraison en cours</a>
        </div>
    {% else %}
        <div class="row btn pull-left">
            <a href={{path('livraison_index', {'history':'true'})}} class="button btn-left"><span class="fas fa-history"></span> Historique</a>
        </div>
    {% endif %}
    
        <div class='row btn pull-right' >
            <a href="" data-toggle="modal" data-target="#ReceptionsModalCenter" class="button btn-left">
                <span class="fa fa-plus"></span>Nouvelle livraison
            </a>
        </div>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Numero</th>
                <th>Statut</th>
                <th>destination</th>
                <th>actions</th>
            </tr>
        </thead>
        <tbody id="tbody-livraisons">
        {% for livraison in livraisons | reverse  %}
            <tr>
                <td>{{ livraison.id }}</td>
                <td>{{ livraison.numero }}</td>
                <td>{{ livraison.statut.nom }}</td>
                <td>{{ livraison.destination.nom }}</td>
                <td>
                
                    <!-- <a href="{{ path('livraison_edit', {'id': livraison.id}) }}">edit</a> -->
                <form action={{path('livraison_index', {'history': 'false'})}} method="post">
                        {% if livraison.statut.id == 21 %}              
                            <button type="submit" name="enCoursLivraison" value={{ livraison.id }} class="btn btn-xs btn-default command-edit backgreen"><i class="fas fa-check fa-2x"></i></button>                   
                        {% endif %}
                        {% if livraison.statut.id == 22 %}              
                            <button type="submit" name="livraisonTerminée" value={{ livraison.id }} class="btn btn-xs btn-default command-edit backgreen"><i class="far fa-arrow-alt-circle-down"></i></button>                   
                        {% endif %}
                        <a href="{{ path('livraison_show', {'id': livraison.id}) }}"class="btn btn-xs btn-default command-edit"><i class="fas fa-eye fa-2x"></i></a>
                    </form>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="3">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    {{ knp_pagination_render(livraisons) }}


        <!-- Modal -->
        <form method="" class="modal fade" id="ReceptionsModalCenter" tabindex="-1" role="dialog" aria-labelledby="ReceptionsModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">Créer une nouvelle réception</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body modal-input container-fluid">
                        <h1>Génération des livraisons</h1>
        <div class="container-fluid">
            {% for destination in destinations %}
            <div class="row">
            <label class="col-10" for="scales"> Prévisualisation de la livraison pour l'emplacement: {{destination.nom}}</label>
            <table class="table">
                <thead>
                    <tr>
                        <th>Nom</th>
                        <th>Reférences Articles</th>
                        <th>position</th>
                    </tr>
                </thead>
                <tbody>
                {% set i = 0 %}
                {% for demande in demandes %}
                    {% if destination.nom == demande.destination.nom %}          
                        {% for article in demande.articles %}
                        <tr {% if i % 2 == 1 %} class="backtablejv" {% endif %}>
                            {% set i = i + 1 %}
                            <td>{{ article.nom }}</td>
                            <td>{{ article.refArticle.reference }}</td>
                            <td>{{ article.position }}</td>
                        </tr>
                        {% endfor %}
                    {% endif %}
                {% endfor %}
                    </tbody>
                </table>
            </div>     
            {% endfor %}
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Annuler</button>
                <button id="submitButton" type="button" data-dismiss="modal" class="btn btn-primary btn-success">Enregistrer</button>
            </div>
    </div>
  </div>
</form>

<script>
    var ReceptionModal = document.getElementById("ReceptionsModalCenter");
    var ButtonSubmit = document.getElementById("submitButton");

    ReceptionModal.addEventListener('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var recipient = button.data('whatever') // Extract info from data-* attributes
        document.getElementById("ReceptionsModalCenter").innerHTML = ReceptionModal;
        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
        xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {

            }
        };
        xhttp.open("POST", "traitement.php", true);
        xhttp.send();
    })

    ButtonSubmit.addEventListener("click", function (event) {
        xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                //Lorsque la réponse Json est renvoyé en enlève le modal
                var obj = JSON.parse(JSON.parse(this.responseText));
                console.log(obj);
                obj.forEach(livraison => {
                    var url = livraison.id;
                    var refTable = document.getElementById('tbody-livraisons');
                    var rowCount = refTable.rows.length;

                    // Insère d'une ligne  dans la table avec un indice dynamique + création de la ligne 
                    var nouvelleLigne = refTable.insertRow(rowCount);
                    var nouvelleCellule = nouvelleLigne.insertCell();
                    var nouveauTexte = document.createTextNode(livraison.id)
                    nouvelleCellule.appendChild(nouveauTexte)
                    var nouvelleCellule = nouvelleLigne.insertCell(1);
                    var nouveauTexte = document.createTextNode(livraison.numero)
                    nouvelleCellule.appendChild(nouveauTexte)
                    var nouvelleCellule = nouvelleLigne.insertCell(2);
                    var nouveauTexte = document.createTextNode(livraison.statut)
                    nouvelleCellule.appendChild(nouveauTexte)
                    var nouvelleCellule = nouvelleLigne.insertCell(3);
                    var nouveauTexte = document.createTextNode(livraison.id)
                    nouvelleCellule.appendChild(nouveauTexte)
                    var url = 'http://localhost/WiiStock/WiiStock/public/index.php/livraison/' + livraison.id;
                    var nouvelleCellule = nouvelleLigne.insertCell(4);
                    var a = document.createElement("a");
                    a.className = 'btn btn-xs btn-default command-edit'
                    a.setAttribute('href', url)
                    var i = document.createElement("i")
                    i.className = 'fas fa-eye fa-2x'
                    nouvelleCellule.appendChild(a).appendChild(i)
                    //document.getElementById('noResult').deleteRow(0)
                }) 
            }
        };

        let inputs = document.querySelectorAll("#livraison"); // On récupère tout les inputs qui nous intéresse avec le querySelectorAll

        var Data = []; // Tableau de données

        inputs.forEach(input => { //Pour chaque input on fait un tableau avec pour clé son nom et comme valeur la valeur dans l'input
            Data.push(input.value);
            console.log(Data);
        })

        Json = JSON.stringify(Data); // On transforme les données en JSON
        console.log(Json);
        xhttp.open("POST", "{{ path('createLivraison') }}", true);
        xhttp.send(Json);
    });
</script>

{% endblock %}