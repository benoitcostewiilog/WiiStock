{% extends 'base.html.twig' %}

{% block title %}Changement de mot de passe{% endblock %}

{% block classbody %}
    style='background-image: url({{asset('img/GTXBackAccueil2red.png')}})'
    class='accueil-back'
{% endblock  %}

{% block body %}

    <div class="login-wrapper mt-3">
        <div class="row">
            <div class="box-login login-form box-shadow">
                <div class="login-header">
                    Changement de mot de passe
                </div>
                <div class="form-group needed">
                    <label for="email">Email</label>
                    <input type="text" id="email" class="form-control data needed input" name="email" maxlength="64">
                </div>
                <div class="form-group needed">
                    <label for="password">Nouveau mot de passe</label>
                    <input type="password" id="password" class="form-control data needed input" name="password" maxlength="64">
                </div>
                <div class="form-group needed">
                    <label for="password2">Confirmation du mot de passe</label>
                    <input type="password" id="Password2" class="form-control data needed input" name="password2" maxlength="64">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" onclick="{{ url('change_password_in_bdd') }}">
                        <a href="{{ url('change_password_in_bdd') }}" >Envoyer</a></button>
                </div>
            </div>
        </div>
    </div>

{#        <div class="row">#}
{#            <div class="box-login box-shadow">#}
{#                <div class="form-signin login-form">#}
{#                    {{ form_start(form) }}#}
{#                    {{ form_row(form.password, {'attr': {'autofocus' : true} }) }}#}
{#                    {{ form_row(form.plainPassword.first) }}#}
{#                    {{ form_row(form.plainPassword.second) }}#}
{#                    {{ form_row(form.modifier, {'attr': {'class' : 'btn float-left'} }) }}#}
{#                    <a class="btn float-right" href="{{ url('check_last_login') }}">Retour</a>#}
{#                    {{ form_end(form) }}#}
{#                </div>#}
{#            </div>#}
{#        </div>#}
{#    </div>#}

{% endblock %}

{#{% block javascripts %}#}
{#    <script type="text/javascript">#}

{#    function disableModifier() {#}
{#        $('#form_modifier').attr("disabled", true);#}

{#    }#}

{#    function enableModifier() {#}
{#        $('#form_modifier').prop("disabled", false);#}
{#    }#}

{#    // password_error#}
{#        $("#form_plainPassword_second").change(function () {#}
{#            $("#form_plainPassword_first").parent().find('input, select').removeClass('is-invalid');#}
{#            $("#form_plainPassword_first").parent().find(".invalid-feedback").remove();#}
{#            var password_second = $(this).val();#}
{#            #}
{#            var password_first = $("#form_plainPassword_first").val();#}
{#            #}
{#            if(password_first && password_second && (password_first != password_second)) {#}
{#                var msg = '<span class="invalid-feedback d-block"><span class="mb-0 d-block"><span class="initialism form-error-icon badge badge-danger">Erreur</span><span class="form-error-message">Les mots de passe ne sont pas identiques.</span></span></span>';#}
{#                $("#form_plainPassword_first").addClass('is-invalid').after(msg);#}
{#                disableModifier();#}
{#            } else {#}
{#                $("#form_plainPassword_first").parent().find('input, select').removeClass('is-invalid');#}
{#                $("#form_plainPassword_first").parent().find(".invalid-feedback").remove();#}
{#                $("#form_plainPassword_first").removeClass('is-invalid');#}
{#                if (password_second && password_first) {#}
{#                    /*$("#form_plainPassword_first").removeClass('is-invalid');*/#}
{#                    $("#regex").remove();#}
{#                    $("#len").remove();#}

{#                    var regex = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\W)(?!.*\s).*$/;#}
{#                    var pass = $('#form_plainPassword_first').val();#}
{#                    if (! regex.test(pass)) {#}
{#                        #}
{#                        var msg = '<span id="regex" class="invalid-feedback d-block"><span class="mb-0 d-block"><span class="initialism form-error-icon badge badge-danger">Erreur</span><span class="form-error-message">Doit contenir une majuscule, une minuscule, un chiffre et un symbole.</span></span></span>';#}
{#                            $("#form_plainPassword_first").addClass('is-invalid').after(msg);#}
{#                            disableModifier();#}

{#                    } else if (pass.length < 8) {#}
{#                        #}
{#                        var msg = '<span id="len" class="invalid-feedback d-block"><span class="mb-0 d-block"><span class="initialism form-error-icon badge badge-danger">Erreur</span><span class="form-error-message">Doit contenir au moins 8 caractères.</span></span></span>';#}
{#                            $("#form_plainPassword_first").addClass('is-invalid').after(msg);#}
{#                            disableModifier();#}
{#                        return false;#}
{#                    } else {#}

{#                        $("#form_plainPassword_first").parent().find('input, select').removeClass('is-invalid');#}
{#                        $("#form_plainPassword_first").parent().find(".invalid-feedback").remove();#}
{#                        enableModifier();#}
{#                    }#}
{#                }#}
{#            }#}



{#        });#}

{#        $("#form_plainPassword_first").change(function () {#}
{#            $("#form_plainPassword_second").parent().find('input, select').removeClass('is-invalid');#}
{#            $("#form_plainPassword_second").parent().find(".invalid-feedback").remove();#}
{#            var password_first = $(this).val();#}
{#            #}

{#            var password_second = $("#form_plainPassword_second").val();#}
{#            ;#}
{#            if(password_second && password_first && (password_second != password_first)) {#}
{#                var msg = '<span class="invalid-feedback d-block"><span class="mb-0 d-block"><span class="initialism form-error-icon badge badge-danger">Erreur</span><span class="form-error-message">Les mots de passe ne sont pas identiques.</span></span></span>';#}
{#                $("#form_plainPassword_second").addClass('is-invalid').after(msg);#}
{#                disableModifier();#}
{#            } else {#}
{#                $("#form_plainPassword_second").parent().find('input, select').removeClass('is-invalid');#}
{#                $("#form_plainPassword_second").parent().find(".invalid-feedback").remove();#}
{#                $("#form_plainPassword_second").removeClass('is-invalid');#}
{#                if (password_first && password_second) {#}
{#                    #}
{#                    $("#regex").remove();#}
{#                    $("#len").remove();#}

{#                    var regex = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\W)(?!.*\s).*$/;#}
{#                    var pass = $('#form_plainPassword_first').val();#}
{#                    if (! regex.test(pass)) {#}
{#                        #}
{#                        var msg = '<span id="regex" class="invalid-feedback d-block"><span class="mb-0 d-block"><span class="initialism form-error-icon badge badge-danger">Erreur</span><span class="form-error-message">Doit contenir une majuscule, une minuscule, un chiffre et un symbole.</span></span></span>';#}
{#                            $("#form_plainPassword_first").addClass('is-invalid').after(msg);#}
{#                            disableModifier();#}

{#                    } else if (pass.length < 8) {#}
{#                        #}
{#                        var msg = '<span id="len" class="invalid-feedback d-block"><span class="mb-0 d-block"><span class="initialism form-error-icon badge badge-danger">Erreur</span><span class="form-error-message">Doit contenir au moins 8 caractères.</span></span></span>';#}
{#                            $("#form_plainPassword_first").addClass('is-invalid').after(msg);#}
{#                            disableModifier();#}
{#                        return false;#}
{#                    } else {#}

{#                        $("#form_plainPassword_first").parent().find('input, select').removeClass('is-invalid');#}
{#                        $("#form_plainPassword_first").parent().find(".invalid-feedback").remove();#}
{#                        enableModifier();#}
{#                    }#}
{#                }#}
{#            }#}
{#        });#}

{#    </script>#}
{#{% endblock %}#}